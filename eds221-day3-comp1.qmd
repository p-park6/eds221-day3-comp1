---
title: "eds221-day3-comp1"
---

```{r}
library(palmerpenguins)
```


# Conditional statement

```{r}
temperature <- 98.2

if(temperature > 97){
  print("Temperature warning")
} else
  print("No temperature warning")
```
Create an if else statement for blue whale lengths. Create a variable blue whale, which has a value of 40. Add an if else statement that returns "GIANT" if the length exceeds 35, "medium" if the length is between 20 to 35, or "small" if the length is <=20


```{r}
blue_whale_m <- 40

if(blue_whale_m > 35) { 
  print("GIANT")
} else if (blue_whale_m >= 20 & blue_whale_m <= 35){ 
    print("MEDIUM")
} else if (blue_whale_m > 20) { 
    print("SMALL")
}
#else if will run if there is a conditonal statement. else just runs if there is no conditional statement
```

Switch Statement
```{r}
housing_type <- "single"

switch(housing_type,
       "single" = print("400"),
       "double" = print("750"),
       "whole" = print ("1100"))

if (housing_type == "whole") {
  print("1100")
} else if (housing_type == "double") {
  print("750")
} else if (housing_type == "single") {
  print("400")
}
```

-   make new branch called for loops
-   make sure connected to upstream repo



```{r}
#test practice
library(palmerpenguins)
library(tidyverse)

clean_penguins <- penguins %>% 
  select(species, sex, bill_length_mm) %>% 
  filter(sex == "female")

graph <- ggplot(data=penguins, aes(x=bill_length_mm))+ geom_histogram()


df1 <- select(penguins, species, sex, bill_length_mm)
df2 <- filter(df1, sex == "female")

ggsave(filename = here::here("test", "myplot.png"), plot = graph)
```
# For loop with conditional statement

write a for loop with a conditional (if) statement that returns the means of all NUMERIC variables in the penguins dataset.
-   is.numeric (asks is this thing numeric?)
-   mean(vec, na.rm = TRUE)

```{r}


for (i in seq_along(penguins)){
  if(is.numeric(penguins[[i]])) {
    mean_penguins <- mean(penguins[[i]], na.rm = TRUE)
     print(mean)
  }
}
```

use apply() to iterate over rows or columns. MARGIN = 1 (rows), MARGIN = 2 (columns).
```{r}
apply(X = mtcars, MARGIN = 2, FUN = median)
#or
apply(mtcars, 2, median)
```
dplyr::across()
```{r}
penguins %>% 
  group_by(species, sex) %>% 
  summarize(mean_flipper_length = mean(flipper_length_mm, na.rm = TRUE),
            sd_flipper_length = sd(flipper_length_mm, na.rm = TRUE), 
            max_body_mass = max(body_mass_g, na.rm = TRUE))
```

```{r}
penguins %>% 
  group_by(species) %>% 
  summarize(across(where(is.numeric), mean, na.rm = TRUE))
```


Detecting a string pattern
```{r}
food <- "I love pizza"

str_detect(food, "burritos")

if (str_detect(food, "burritos")) {
  print("yay burritos")
} else ("what about burritos")
```






